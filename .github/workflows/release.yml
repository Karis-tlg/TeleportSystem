on:
  release:
    types:
      - published

jobs:
  build:
    outputs:
      plugin_name: ${{ steps.plugin_name.outputs.plugin_name }}
      plugin_name_lower: ${{ steps.plugin_name_lower.outputs.plugin_name_lower }}
      plugin_version: ${{ steps.plugin_version.outputs.plugin_version }} # format: v1.2.3
    runs-on: windows-latest
    steps:
      # 检出代码
      - uses: actions/checkout@v4

      # 解析插件名称
      - name: extract plugin name
        id: plugin_name
        run: |
          tools/jse.exe -e "'refs/tags/v0.1.0-TPSystem'.match(/v\d+\.\d+\.\d+-.+/).join().split('-')[1]" > plugin_name.txt
          echo "::set-output name=plugin_name::$(cat plugin_name.txt)"

      - name: extract plugin name lower
        id: plugin_name_lower
        run: |
          tools/jse.exe -e "'refs/tags/v0.1.0-TPSystem'.match(/v\d+\.\d+\.\d+-.+/).join().split('-')[1].toLowerCase()" > plugin_name_lower.txt
          echo "::set-output name=plugin_name_lower::$(cat plugin_name_lower.txt)"

      - name: extract plugin version
        id: plugin_version
        run: |
          tools/jse.exe -e "'refs/tags/v0.1.0-TPSystem'.match(/v\d+\.\d+\.\d+-.+/).join().split('-')[0]" > plugin_version.txt
          echo "::set-output name=plugin_version::$(cat plugin_version.txt)"

      - run: |
          echo "Plugin name: ${{ steps.plugin_name.outputs.plugin_name }}"
          echo "Plugin name lower: ${{ steps.plugin_name_lower.outputs.plugin_name_lower }}"
          echo "Plugin version: ${{ steps.plugin_version.outputs.plugin_version }}"

      # 安装xmake
      - uses: xmake-io/github-action-setup-xmake@v1

      # 缓存xmake
      - uses: actions/cache@v4
        with:
          path: |
            ~/AppData/Local/.xmake
          key: xmake-${{ hashFiles('xmake.lua') }}
          restore-keys: |
            xmake-

      # 更新仓库
      - run: |
          xmake repo -u

      # 配置编译目标
      - run: |
          xmake f -a x64 -m release -p windows -y --plugin=${{ steps.plugin_name.outputs.plugin_name }}

      # 编译插件
      - run: |
          xmake -w -y

      # 上传编译产物
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-windows-x64-${{ github.sha }}
          path: |
            bin/

  # 准备发布资产
  prepare_assets:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: |
          mkdir origin_repo
          mkdir origin_repo/coder
          cp -r plugin/${{ needs.build.outputs.plugin_name_lower }}/* origin_repo/coder/
          cp -r assets/${{ needs.build.outputs.plugin_name_lower }}/* origin_repo/coder/

      - name: Push files to corresponding repository
        run: |
          cd origin_repo
          git config --global user.name "Actions"
          git config --global user.email "pwxg286704@163.com"
          git clone --depth=1 https://${{ secrets.SSH_PRIVATE_KEY }}@github.com/engsr6982/Levi${{ needs.build.outputs.plugin_name }}.git
          cd Levi${{ needs.build.outputs.plugin_name }}
          cp -r ../coder/* .
          git add -A
          git commit -m "Release ${{ needs.build.outputs.plugin_version }}"
          git tag -a ${{ needs.build.outputs.plugin_version }} -m "Release ${{ needs.build.outputs.plugin_version }}"
          git push
          git push --tags
          cd ../../

  package-and-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-windows-x64-${{ github.sha }}
          path: artifact

      - run: |
          cp -r assets/${{ needs.build.outputs.plugin_name_lower}}/CHANGELOG.md artifact/
          cp -r assets/${{ needs.build.outputs.plugin_name_lower }}/README.md artifact/

      - name: Archive release
        run: |
          cd artifact
          zip -r ../Levi${{ needs.build.outputs.plugin_name }}-windows-x64.zip *
          cd ..

      # 解析CHANGELOG
      - uses: ffurrer2/extract-release-notes@v2
        id: release-notes
        with:
          version: ${{ needs.build.outputs.plugin_version }}
          changelog_file: assets/${{ needs.build.outputs.plugin_name_lower }}/CHANGELOG.md

      # 创建目标仓库的Release
      - uses: softprops/action-gh-release@v1
        with:
          repository: engsr6982/Levi${{ needs.build.outputs.plugin_name }}
          body: ${{ steps.release-notes.outputs.release_notes }}
          tag_name: ${{ needs.build.outputs.plugin_version }}
          token: ${{ secrets.SSH_PRIVATE_KEY }}
          files: |
            Levi${{ needs.build.outputs.plugin_name }}-windows-x64.zip
